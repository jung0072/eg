# Generated by Django 3.2.9 on 2022-04-05 14:32

import django.contrib.postgres.fields
import django.core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid

from engage_app.utils import UserRoles, ClinicalAreas, QuestionTypes, ResearchInterestTypes


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('clinical_area', models.TextField(choices=ClinicalAreas.to_list(), max_length=200)),
                ('mapping', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(choices=ResearchInterestTypes.to_list(), max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('role', models.CharField(blank=True, choices=UserRoles.to_list(), max_length=200, null=True)),
                ('profile_picture', models.TextField(blank=True, null=True)),
                ('is_active_researcher', models.BooleanField(default=False)),
                ('is_pending_researcher', models.BooleanField(default=True)),
                ('is_researcher_form_ready_for_review', models.BooleanField(default=False)),
                ('has_logged_in', models.BooleanField(default=True)),
                ('researcher_form_review_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('linkedin_link', models.URLField(blank=True, default='', null=True)),
                ('twitter_link', models.URLField(blank=True, default='', null=True)),
                ('facebook_link', models.URLField(blank=True, default='', null=True)),
                ('instagram_link', models.URLField(blank=True, default='', null=True)),
                ('research_gate_link', models.URLField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('mapping', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dev_code', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(4)])),
                ('order_number', models.SmallIntegerField()),
                ('type', models.CharField(choices=QuestionTypes.to_list(), max_length=200)),
                ('is_required_researcher', models.BooleanField(default=False)),
                ('is_required_patient', models.BooleanField(default=False)),
                ('is_required_family_of_patient', models.BooleanField(default=False)),
                ('is_required_passive', models.BooleanField(default=False)),
                ('text_for_researcher', models.CharField(blank=True, max_length=600, null=True)),
                ('text_for_patient', models.CharField(blank=True, max_length=600, null=True)),
                ('text_for_family_of_patient', models.CharField(blank=True, max_length=600, null=True)),
                ('text_for_caretaker_of_patient', models.CharField(blank=True, max_length=600, null=True)),
                ('text_for_passive', models.CharField(blank=True, max_length=600, null=True)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('parent_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auth_app_userprofilequestion_parent_question', to='auth_app.userprofilequestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('order_number', models.SmallIntegerField()),
                ('is_valid_researcher', models.BooleanField()),
                ('is_valid_patient', models.BooleanField()),
                ('is_valid_family_of_patient', models.BooleanField()),
                ('is_valid_caretaker_of_patient', models.BooleanField()),
                ('is_valid_passive', models.BooleanField()),
                ('is_published', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileQuestionOptionDependency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dependant_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_dependant_question', to='auth_app.userprofilequestion')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_dependant_option', to='auth_app.userprofileoption')),
            ],
        ),
        migrations.AddField(
            model_name='userprofilequestion',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth_app.userprofilesection'),
        ),
        migrations.AddField(
            model_name='userprofileoption',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.userprofilequestion'),
        ),
        migrations.CreateModel(
            name='UserProfileAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selected_options', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(max_length=200), default=list, size=None)),
                ('comment', models.TextField(default='', max_length=400)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_answered_question', to='auth_app.userprofilequestion')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.userprofile')),
            ],
            options={
                'unique_together': {('question', 'user_profile')},
            },
        ),
    ]
